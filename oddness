#!/usr/bin/env perl
use strict;
use warnings;

use if $ENV{USER} eq "gene", lib => map { "$ENV{HOME}/sandbox/$_/lib" } qw(MIDI-Drummer-Tiny MIDI-Util Music-Duration-Partition);

use List::Util qw/ shuffle /;
use MIDI::Drummer::Tiny;
use MIDI::Util qw(setup_score set_chan_patch);
use Music::Duration::Partition;
use Music::Scales;
use Music::VoiceGen;

my $max  = shift || 4;
my $bpm  = shift || 90;
my $size = shift || 4;

my $top_patch    = 0;
my $bottom_patch = 42;

my $wn  = 'wn';
my $en  = 'en';
my $i   = 'A2';
my $v   = 'E3';
my $vi  = 'F3';
my $vii = 'G3';

my $score = setup_score( bpm => $bpm );

$score->synch(
    \&top,
    \&bottom,
    \&beat,
);

$score->write_score("$0.mid");

sub top {
    set_chan_patch( $score, 0, $top_patch );

    my $mdp = Music::Duration::Partition->new(
        size => $size,
        pool => [qw/ en sn /],
    );

    my $motif = $mdp->motif;

    my @pitches   = get_scale_MIDI( 'A', 3, 'pminor' );
    my @intervals = qw/ -4 -3 -2 2 3 4 /;

    my $voice = Music::VoiceGen->new(
        pitches   => \@pitches,
        intervals => \@intervals,
    );

    for my $x ( 1 .. $max ) {
        my @notes1 = map { $voice->rand } 0 .. @$motif - 1;
        my @notes2 = map { $voice->rand } 0 .. @$motif - 1;

        $mdp->add_to_score($score, $motif, \@notes1);

        $score->r($wn);

        my @phrase = shuffle @$motif;

        $mdp->add_to_score($score, \@phrase, \@notes2);

        $score->r($wn);

        $mdp->add_to_score($score, $motif, \@notes1);

        $score->r('dhn');
    }
}

sub beat {
    my $d = MIDI::Drummer::Tiny->new( bpm => $bpm, score => $score );

    for my $n ( 1 .. $max ) {
        if ( $n % 4 == 3 ) {
            beat_two($d);
        }
        else {
            beat_one( $d, $n );
        }
    }
}

sub bottom {
    set_chan_patch( $score, 1, $bottom_patch );
#    $score->Volume(30);

    for my $n ( 1 .. $max ) {
        one();                 # 6
        zero();                # 4
        $score->n( $en, $vi ); # 1

        one();
        zero();
        $score->n( $en, $vii );

        one();
        zero();
        $score->n( $en, $vi );

        one();
        zero();
        $score->n( $en, $vii );
        $score->n( $en, $vi );
        $score->n( $en, $v );
    }
}

sub zero {
    $score->n( $en, $i );
    $score->n( $en, $v );
    $score->n( $en, $v );
    $score->n( $en, $i );
}

sub one {
    zero();
    $score->n( $en, $v );
    $score->n( $en, $vi );
}

sub beat_one {
    my ( $d, $n ) = @_;

    my $cymbal = $n % 4 ? $d->closed_hh : $d->ride_bell;

    $d->note( $d->quarter, $d->kick, $n == 1 ? $d->closed_hh : $d->crash1 );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->quarter, $cymbal, $d->snare );

    $d->note( $d->quarter, $cymbal, $d->kick );

    $d->note( $d->eighth, $cymbal );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->quarter, $cymbal );

    $d->note( $d->quarter, $cymbal, $d->kick );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->quarter, $cymbal, $d->snare );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->quarter, $cymbal, $d->kick );

    $d->note( $d->eighth, $cymbal );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->eighth, $cymbal );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->snare );

    $d->note( $d->eighth, $cymbal );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->quarter, $cymbal );

    $d->note( $d->quarter, $cymbal, $d->kick );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->quarter, $cymbal, $d->snare );

    $d->note( $d->eighth, $cymbal );
    $d->note( $d->eighth, $d->kick );

    $d->note( $d->eighth, $cymbal, $d->kick );
    $d->note( $d->eighth, $d->kick );
}

sub beat_two {
    my ($d) = @_;

    $d->note( $d->eighth, $d->crash1, $d->kick );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->snare );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->snare );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->snare );

    $d->note( $d->eighth, $d->closed_hh );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->snare );
    $d->note( $d->eighth, $d->closed_hh );

    $d->note( $d->eighth, $d->closed_hh );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );

    $d->note( $d->eighth, $d->closed_hh, $d->kick );
    $d->note( $d->eighth, $d->closed_hh, $d->kick );
}
