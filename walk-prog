#!/usr/bin/env perl

use strict;
use warnings;

use Data::Dumper::Compact qw(ddc);
use Music::Scales qw(get_scale_notes);

use Music::Bassline::Generator;
use MIDI::Drummer::Tiny;
use MIDI::Util qw(set_chan_patch midi_format);
use Music::Chord::Progression;
use Music::Duration::Partition;

my $bpm = shift || 100;

my $chords_patch = shift // 4;
my $bass_patch   = shift // 0;

my $channel = 0;
my $octave  = 4;
my $bars    = 8;

my @progressions;

my $d = MIDI::Drummer::Tiny->new(
    file   => "$0.mid",
    bpm    => $bpm,
    bars   => $bars,
    reverb => 10,
);

$d->sync(
    \&drums,
    \&chords,
    \&bass,
);

$d->write;

sub drums {
    $d->metronome4($d->bars, $d->ride2, $d->quarter, 67);
}

sub chords {
    set_chan_patch($d->score, $channel++, $chords_patch);

    my $prog = Music::Chord::Progression->new(
        max => $d->bars,
        chord_map => ['', 'm', 'm', '', '', 'm', 'm'],
#        chord_map => [qw(M7 m7 m7 M7 7 m7 dim7)],
#        substitute => 1,
#        resolve => 0,
        verbose => 1,
    );
    my $chords = $prog->generate;

    push @progressions, $prog->phrase;

    for my $chord (@$chords) {
        my @chord = midi_format(@$chord);
        $d->note($d->whole, @chord);
    }
}

sub bass {
    set_chan_patch($d->score, $channel++, $bass_patch);

    my $mdp = Music::Duration::Partition->new(
        size    => $d->bars / 2,
#        pool    => [qw/ dhn hn qn /],
#        weights => [    1,  2, 3   ],
        pool    => [qw/ hn qn en /],
        weights => [    1, 2, 1   ],
    );
    my $motif1 = $mdp->motif;
    my $motif2 = $mdp->motif;

    my $bassline = Music::Bassline::Generator->new(
        guitar  => 1,
        verbose => 0,
        scale   => sub { $_[0] =~ /^[A-G][#b]?m/ ? 'pminor' : 'pentatonic' },
#        scale   => sub { $_[0] =~ /^[A-G][#b]?m/ ? 'minor' : 'major' },
    );

    for my $p (@progressions) {
        my $i = 0;

        for my $chord (@$p) {
            my $m = $i % 2 == 0 ? $motif2 : $motif1;

            my $notes = $bassline->generate($chord, scalar(@$m));

            $mdp->add_to_score($d->score, $m, $notes);

            $i++;
        }
    }
}
