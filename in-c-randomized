#!/usr/bin/env perl
use strict;
use warnings;

##
# This is a randomized re-orchestration of Terry Riley's venerable composition, "In C."
# Writeup: https://techn.ology.net/terry-rileys-in-c-in-perl/
##

use if $ENV{USER} eq "gene", lib => map { "$ENV{HOME}/sandbox/$_/lib" } qw(MIDI-Util);
use MIDI::Util qw(setup_score set_chan_patch);
use List::Util qw(shuffle);

# Major (0) or minor (1)?
my $minor = shift // 0;

# Set the number of loop motifs to use
my $max = shift || 8;

# Do or do not shuffle the chosen motifs
my $shuffle = shift // 0;

# Set the number of voices
my $voices = shift || 4;

# General MIDI patches that are tones
my @patches =
    # soft:
    qw(4 5 12 16 20 21 32 33 35 39 40 42 44 46 49 50 51 52 53 58 65 68 69 70 72 73 74 75 76 77 85 89 90 91 93 94 95),
    # hard:
#    qw(0 7 8 13 17 18 25 27 28 29 31 41 48 54 56 59 66 67 71 83 84),
    # all:
#    (0 .. 95)
;

my $total_loops = 53;

die 'More loops requested than are available' if $max > $total_loops;
die 'More voices than available patches' if $voices > @patches;

# Initialize the MIDI channel
my $channel = 0;

# Setup the MIDI score
my $score = setup_score(bpm => 120);

# Declare the available loops
my @loops = map { my $sub = 'loop' . $_; \&$sub } 1 .. $total_loops;

# Limit the number of loops to be played to the given max
my @pick = $shuffle ? (shuffle @loops)[0 .. $max - 1] : @loops[0 .. $max - 1];

# Generate a phrase for each voice
my @phrases;
for my $voice (1 .. $voices) {
    # Make a procedure to play the chosen loops
    my $proc = sub {
        # Avoid the drum channel
        $channel++ if $channel == 9;

        my $patch = random_patch();

        print "Patch: $patch, Voice: $voice, Channel: $channel\n";

        # Increment the channel and patch
        set_chan_patch($score, $channel++, $patch);

        # Call each of the chosen loops
        $_->() for @pick;
    };

    # Accumulate our phrase functions
    push @phrases, $proc;
}

# Mash the phrases together as MIDI tracks
$score->synch(@phrases);

# Write the score to a MIDI file
$score->write_score("$0.mid");

# Return an integer between 1 and 4
sub rand4 {
    return 1 + int rand 4;
}

# Return a random patch!
sub random_patch {
    return $patches[ int rand @patches ];
}

# The master looping routine
sub loop {
    my ($code) = @_;
    my $n = rand4();
    print "\t\t$n times\n";
    $code->() for 1 .. $n;
}

# Available loops:

sub loop1 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('qn', $minor ? 'Ds4' : 'E4') for 1 .. 3;
    });
}

sub loop2 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('en', 'F4');
        $score->n('qn', $minor ? 'Ds4' : 'E4');
    });
}

sub loop3 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->r('en');
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('en', 'F4');
        $score->n('en', $minor ? 'Ds4' : 'E4');
    });
}

sub loop4 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->r('en');
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('en', 'F4');
        $score->n('en', 'G4');
    });
}

sub loop5 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('en', 'F4');
        $score->n('en', 'G4');
        $score->r('en');
    });
}

sub loop6 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('wn', 'C5');
        $score->n('wn', 'C5');
    });
}

sub loop7 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->r('qn') for 1 .. 3;
        $score->r('en');
        $score->n('sn', 'C4') for 1 .. 2;
        $score->n('en', 'C4');
        $score->r('en');
        $score->r('qn') for 1 .. 3;
    });
}

sub loop8 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('dwn', 'G4');
        $score->n('wn', 'F4');
        $score->n('wn', 'F4');
    });
}

sub loop9 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->r('en');
        $score->r('qn') for 1 .. 3;
    });
}

sub loop10 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
    });
}

sub loop11 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
    });
}

sub loop12 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', 'F4');
        $score->n('en', 'G4');
        $score->n('wn', $minor ? 'As4' : 'B4');
        $score->n('qn', 'C3');
    });
}

sub loop13 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('den', 'G4');
        $score->n('sn', 'G4');
        $score->n('sn', 'F4');
        $score->n('qn', 'G4');
        $score->r('den');
        $score->n('sn', 'G4');
        $score->n('dhn', 'G4');
    });
}

sub loop14 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('wn', 'C5');
        $score->n('wn', $minor ? 'As4' : 'B4');
        $score->n('wn', 'G4');
        $score->n('wn', 'Fs4');
    });
}

sub loop15 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'G4');
        $score->r('den');
        $score->r('qn') for 1 .. 3;
    });
}

sub loop16 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'C5');
        $score->n('sn', $minor ? 'As4' : 'B4');
    });
}

sub loop17 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'C5');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'C5');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->r('sn');
    });
}

sub loop18 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('den', $minor ? 'Ds4' : 'E4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
    });
}

sub loop19 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->r('dqn');
        $score->n('dqn', 'G5');
    });
}

sub loop20 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('den', 'G3');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
    });
}

sub loop21 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('dhn', 'Fs4');
    });
}

sub loop22 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('dqn', $minor ? 'Ds4' : 'E4') for 1 .. 5;
        $score->n('dqn', 'Fs4');
        $score->n('dqn', 'G4');
        $score->n('dqn', $minor ? 'Gs4' : 'A4');
        $score->n('en', $minor ? 'As4' : 'B4');
    });
}

sub loop23 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('dqn', 'Fs4') for 1 .. 5;
        $score->n('dqn', 'G4');
        $score->n('dqn', $minor ? 'Gs4' : 'A4');
        $score->n('qn', $minor ? 'As4' : 'B4');
    });
}

sub loop24 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('en', 'Fs4');
        $score->n('dqn', 'G4') for 1 .. 5;
        $score->n('dqn', $minor ? 'Gs4' : 'A4');
        $score->n('en', $minor ? 'As4' : 'B4');
    });
}

sub loop25 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('en', 'Fs4');
        $score->n('en', 'G4');
        $score->n('dqn', $minor ? 'Gs4' : 'A4') for 1 .. 5;
        $score->n('dqn', $minor ? 'As4' : 'B4');
    });
}

sub loop26 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', $minor ? 'Ds4' : 'E4');
        $score->n('en', 'Fs4');
        $score->n('en', 'G4');
        $score->n('en', $minor ? 'Gs4' : 'A4');
        $score->n('dqn', $minor ? 'As4' : 'B4') for 1 .. 5;
    });
}

sub loop27 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('en', 'G4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'G4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
    });
}

sub loop28 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
        $score->n('sn', 'Fs4');
        $score->n('den', $minor ? 'Ds4' : 'E4');
        $score->n('sn', $minor ? 'Ds4' : 'E4');
    });
}

sub loop29 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('dhn', $minor ? 'Ds4' : 'E4');
        $score->n('dhn', 'G4');
        $score->n('dhn', 'C5');
    });
}

sub loop30 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('dwn', 'C5');
    });
}

sub loop31 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'G4');
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
    });
}

sub loop32 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'F4');
        $score->n('dhn', 'F4');
        $score->n('dqn', 'G4');
    });
}

sub loop33 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'G4');
        $score->n('sn', 'F4');
        $score->r('en');
    });
}

sub loop34 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'G4');
        $score->n('sn', 'F4');
    });
}

sub loop35 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->r('en');
        $score->r('qn') for 1 .. 3;
        $score->n('qn', $minor ? 'Gs4' : 'As4');
        $score->n('dhn', 'G5');
        $score->n('en', $minor ? 'Gs4' : 'A5');
        $score->n('en', 'G5');
        $score->n('en', 'G5');
        $score->n('en', $minor ? 'As4' : 'B5');
        $score->n('dqn', $minor ? 'Gs4' : 'A5');
        $score->n('en', 'G5');
        $score->n('dhn', $minor ? 'Ds4' : 'E5');
        $score->n('en', 'G5');
        $score->n('en', 'Fs5');
        $score->n('dhn', 'Fs5');
        $score->r('qn') for 1 .. 2;
        $score->r('en');
        $score->n('en', $minor ? 'Ds4' : 'E5');
        $score->n('hn', $minor ? 'Ds4' : 'E5');
        $score->n('dhn', 'F5');
    });
}

sub loop36 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
    });
}

sub loop37 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
    });
}

sub loop38 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
    });
}

sub loop39 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'C5');
    });
}

sub loop40 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'F4');
    });
}

sub loop41 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'As4' : 'B4');
        $score->n('sn', 'G4');
    });
}

sub loop42 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('wn', 'C5');
        $score->n('wn', $minor ? 'As4' : 'B4');
        $score->n('wn', $minor ? 'Gs4' : 'A4');
        $score->n('wn', 'C5');
    });
}

sub loop43 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F5');
        $score->n('sn', $minor ? 'Ds4' : 'E5');
        $score->n('sn', 'F5');
        $score->n('sn', $minor ? 'Ds4' : 'E5');
        $score->n('en', $minor ? 'Ds4' : 'E5');
        $score->n('en', $minor ? 'Ds4' : 'E5');
        $score->n('en', $minor ? 'Ds4' : 'E5');
        $score->n('sn', 'F5');
        $score->n('sn', $minor ? 'Ds4' : 'E5');
    });
}

sub loop44 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('en', 'F5');
        $score->n('en', $minor ? 'Ds4' : 'E5');
        $score->n('en', $minor ? 'Ds4' : 'E5');
        $score->n('en', $minor ? 'Ds4' : 'E5');
        $score->n('qn', 'C5');
    });
}

sub loop45 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('qn', 'D5');
        $score->n('qn', 'D5');
        $score->n('qn', 'G4');
    });
}

sub loop46 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'G4');
        $score->n('sn', 'D5');
        $score->n('sn', 'C5');
        $score->n('sn', 'D5');
        $score->r('en');
        $score->n('en', 'G4');
        $score->r('en');
        $score->n('en', 'G4');
        $score->r('en');
        $score->n('en', 'G4');
        $score->n('sn', 'G4');
        $score->n('sn', 'D5');
        $score->n('sn', 'C5');
        $score->n('sn', 'D5');
    });
}

sub loop47 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'D5');
        $score->n('sn', 'C5');
        $score->n('en', 'D5');
    });
}

sub loop48 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('dwn', 'G4');
        $score->n('wn', 'G4');
        $score->n('wn', 'F4');
        $score->n('qn', 'F4');
    });
}

sub loop49 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'Gs4' : 'As4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'Gs4' : 'As4');
        $score->n('sn', 'G4');
    });
}

sub loop50 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
    });
}

sub loop51 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'F4');
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'Gs4' : 'As4');
    });
}

sub loop52 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', 'G4');
        $score->n('sn', $minor ? 'Gs4' : 'As4');
    });
}

sub loop53 {
    print "\t", (caller(0))[3], "\n";
    loop(sub {
        $score->n('sn', $minor ? 'Gs4' : 'As4');
        $score->n('sn', 'G4');
    });
}
