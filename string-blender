#!/usr/bin/env perl
use strict;
use warnings;

use if $ENV{USER} eq "gene", lib => map { "$ENV{HOME}/sandbox/$_/lib" } qw(MIDI-Util);
use MIDI::Util qw(setup_score);
use Music::Scales qw(get_scale_MIDI);
use String::Blender;

my $note   = shift || 'C';
my $scale  = shift || 'major';
my $octave = shift || 4;
my $p      = shift || 8; # Number of phrases to generate
my $n      = shift || 4; # Number of notes per phrase

my $size = 3; # named note length, e.g. Gb3
my $max  = $size * $n + $n - 1;

my @pitches = get_scale_MIDI($note, $octave, $scale);

my $blender = String::Blender->new(
    vocabs => [
        [ @pitches[0,2,3,4] ],
        \@pitches,
        \@pitches,
        [ @pitches[1,5,6] ],
    ],
    strict_order => 1,
    min_elements => $n,
    max_elements => $n,
    max_length   => $max,
    delimiter    => ' ',
);

my @phrases = $blender->blend($p);
use Data::Dumper::Compact qw(ddc);
warn __PACKAGE__,' L',__LINE__,' ',ddc(\@phrases);

my $score = setup_score();
for my $phrase (@phrases) {
    $score->n('qn', $_) for split / /, $phrase;
}
$score->write_score("$0.mid");
